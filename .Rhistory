dsLong <- reshape2::melt(dsLong, id.vars=c("Oblique","Rotation","Varname","kappa"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
patterns<-read.csv("shinyEFA/data/fpm2.csv")
dsLong<-patterns[which(patterns$Rotation=="varimax" & patterns$Oblique==0),]
dsLong <- reshape2::melt(dsLong, id.vars=c("Oblique","Rotation","Varname","kappa"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- reshape2::melt(dsLong, id.vars=c("Varname","kappa"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="factor",value="loading"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$loading >= 0 # positive value?
dsFORp$loading<-abs(dsFORp$loading)
str(dsFORp)
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname ~.)
pT
View(patterns)
View(dsFORp)
patterns<-read.csv("shinyEFA/data/fpm2.csv")
View(patterns)
dsLong <- reshape2::melt(dsLong, id.vars=c("Varname","kappa"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="factor",value="loading"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$loading >= 0 # positive value?
dsFORp$loading<-abs(dsFORp$loading)
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname ~.)
pT
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")
pT
fpm<-read.csv("datasets/fpm.csv")
fpm
fpm<-read.csv("datasets/fpm.csv")
View(fpm)
fpm<-fpm[which(Rotation=="varimax"),]
fpm<-fpm[which(fpm$Rotation=="varimax"),]
View(fpm)
dsLong <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
View(dsLong)
View(dsLong)
fpm<-read.csv("datasets/fpm.csv")
fpm<-fpm[which(fpm$Rotation=="varimax"),]
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
View(dsFORp)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
colors<- c("darksalmon" ,"lightskyblue")
colors
pT<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar()+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(measure~.)
pT
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
fpm<-fpm[which(fpm$Rotation=="varimax"),]
colors<- c("darksalmon" ,"lightskyblue")
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
pT<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar()+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(measure~.)
pT
pT<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar()+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
pT
pT<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
pT
fpm<-read.csv("datasets/fpm2.csv")
fpm<-read.csv("datasets/fpm2.csv")
View(fpm)
View(fpm)
fpm<-fpm[which(fpm$kappa==0),]
colors<- c("darksalmon" ,"lightskyblue")
dsFORp <- reshape2::melt(fpm, id.vars=c("kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
View(dsFORp)
View(fpm)
View(dsFORp)
pT<-ggplot(dsFORp, aes(x=Varname, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
pT
pT<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
pT
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
fix(p)
fpm<-read.csv("datasets/F.csv")
library(ggplot2)
fpm<-read.csv("datasets/F.csv")
colors<- c("darksalmon" ,"lightskyblue")
View(fpm)
dsFORp <- reshape2::melt(fpm, id.vars=c("row.names"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
View(fpm)
View(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp <- reshape2::melt(fpm, id.vars=c("row.names"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
str(F)
str(fpm)
View(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
fpm$row.names
fpm$row.names<-row.names(fpm)
View(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
View(fpm)
View(dsFORp)
View(dsFORp)
View(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
library(ggplot2)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
output$plot <- renderPlot({
#    dsLong<-patterns[which(Rotation==input$rotation & Oblique==input$oblique )]
dsLong<-patterns[which(patterns$Rotation=="varimax" & patterns$Oblique==0),]
dsLong <- reshape2::melt(dsLong, id.vars=c("Oblique","Rotation","Varname","kappa"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="factor",value="loading"))
dsFORp<-dsLong
dsFORp$positive <- dsFORp$loading >= 0 # positive value?
dsFORp$loading<-abs(dsFORp$loading)
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname ~.)
pT
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname ~.)
pT
pT<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname ~.)
pT
patterns<-read.csv("shinyEFA/data/fpm.csv")
library(shiny)
library(datasets)
library(ggplot2) # load ggplot
patterns<-read.csv("shinyEFA/data/fpm.csv")
library(shiny)
library(datasets)
library(ggplot2) # load ggplot
patterns<-read.csv("shinyEFA/data/fpm.csv")
colors<- c("darksalmon" ,"lightskyblue")
title<- paste0("Shiny pattern")
ylims<-c(0,3)           # max for eigenvalue plot
width<-450              # width of pattern in pixels
height<-900             # height of pattern in pixels
width2<-300            # width of scree in pixels
height2<-200            # height of scree in pixels
runApp("shinyEFA")
patterns<-read.csv("shinyEFA/data/F.csv")
patterns<-read.csv("shinyEFA/datasets/F.csv")
runApp("shinyEFA")
patterns<-read.csv("shiny_EFA/datasets/fpm.csv")
print(getwd())
patterns<-read.csv("/data/fpm.csv")
patterns<-read.csv("./data/fpm.csv")
patterns<-read.csv("./data/fpm.csv")
patterns<-read.csv("./data/fpm.csv")
runApp("shinyEFA")
patterns<-read.csv("./data/fpm.csv")
runApp("shinyEFA")
fpm<-read.csv("datasets/F.csv")
View(fpm)
colors<- c("darksalmon" ,"lightskyblue")
fpm$row.names<-row.names(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
getwd()
fpm<-read.csv("datasets/fpm.csv")
View(fpm)
colors<- c("darksalmon" ,"lightskyblue")
fpm$row.names<-row.names(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
str(fpm)
colors<- c("darksalmon" ,"lightskyblue")
fpm$row.names<-row.names(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
rm(list=ls(all=TRUE))
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
str(fpm)
colors<- c("darksalmon" ,"lightskyblue")
fpm$row.names<-row.names(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
rm(list=ls(all=TRUE))
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
str(fpm)
colors<- c("darksalmon" ,"lightskyblue")
fpm$row.names<-row.names(fpm)
dsFORp <- reshape2::melt(fpm, id.vars="row.names")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(dsFORp$value)
dsFORp$value<-abs(dsFORp$value)
dsFORp$value
dsFORp$value<-as.numeric(abs(dsFORp$value))
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-as.numeric(abs(dsFORp$value))
View(dsFORp)
View(fpm)
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
View(dsFORp)
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname")  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
View(dsFORp)
View(dsFORp)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-as.numeric(abs(dsFORp$value))
dsFORp$value
dsFORp$value<-as.numeric(abs(dsFORp$value))
str(dsFORp)
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(variable~.)
p
View(dsFORp)
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
p
title<-"Basic Title"
title
colors<- c("darksalmon" ,"lightskyblue")
colors
rm(list=ls(all=TRUE))
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
str(fpm)
colors<- c("darksalmon" ,"lightskyblue")
title<-"Basic Title"
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
p
runApp("shinyEFA")
rm(list=ls(all=TRUE))
library(ggplot2)
fpm<-read.csv("datasets/fpm.csv")
fpm<-read.csv("data/fpm.csv")
View(fpm)
fpm<-read.csv("data/fpm.csv")
View(fpm)
str(fpm)
colors<- c("darksalmon" ,"lightskyblue")
title<-"Basic Title"
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
p
View(dsFORp)
dsFORp<-fpm[which(Rotation=="varimax"),]
dsFORp<-fpm[which(fpm$Rotation=="varimax"),]
dsFORp<-fpm[which(fpm$Rotation=="varimax"),]
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
p
View(dsFORp)
fpm<-fpm[which(fpm$Rotation=="varimax"),]
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp$positive <- dsFORp$value >= 0 # positive value?
dsFORp$value<-abs(as.numeric(dsFORp$value))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=60,hjust=1))+
facet_grid(Varname~.)
p
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=1))+
facet_grid(Varname~.)
p
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=0))+
facet_grid(Varname~.)
p
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=-1))+
facet_grid(Varname~.)
p
p<-ggplot(dsFORp, aes(x=variable, y=value, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=.5))+
facet_grid(Varname~.)
p
dsFORp$positive <- dsFORp$value >= 0 # positive value?
View(dsFORp)
fpm<-fpm[which(fpm$Rotation=="varimax"),]
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="factor",value="loading"))
dsFORp$positive <- dsFORp$loading >= 0 # positive value?
dsFORp$loading<-abs(as.numeric(dsFORp$loading))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=.5))+
facet_grid(Varname~.)
p
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsLong <- plyr::rename(dsLong, replace=c(variable="factor",value="loading"))
dsFORp <- reshape2::melt(fpm, id.vars=c("Oblique","Rotation","Kappa","Varname"))  ## id.vars declares MEASURED variables (as opposed to RESPONSE variable)
dsFORp <- plyr::rename(dsFORp, replace=c(variable="factor",value="loading"))
dsFORp$positive <- dsFORp$loading >= 0 # positive value?
dsFORp$loading<-abs(as.numeric(dsFORp$loading))
head(dsFORp,20)
str(dsFORp)
p<-ggplot(dsFORp, aes(x=factor, y=loading, fill=positive))+
ggtitle(title)+
geom_bar(stat="identity")+
scale_fill_manual(values=colors)+
scale_y_continuous(limits=c(0,1))+
theme(axis.text.x =element_text(angle=0,hjust=.5))+
facet_grid(Varname~.)
p
